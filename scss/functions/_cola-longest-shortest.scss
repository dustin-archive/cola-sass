@function cola-longest-shortest($type, $list) {
  $result: null;

  @for $i from 1 through length($list) {
    $item: nth($list, $i);
    $length: length($item);

    @if $result == null
        or $type == 'longest' and $length > map-get($result, length)
        or $type == 'shortest' and $length < map-get($result, length) {
      $result: (list: $item, index: $i, length: $length);
    }
    @else if $length == map-get($result, length) {
      $tie: (
        list: map-get($result, list) $item,
        index: map-get($result, index) $i
      );
      $result: map-merge($result, $tie);
    }
  }

  @return $result;
}

@function cola-longest($list) {
  @return cola-longest-shortest('longest', $list);
}

@function cola-shortest($list) {
  @return cola-longest-shortest('shortest', $list);
}

// (list: (1 2 3 4), index: 1, length: 4)
// (list: (1 2 3 4) (1 2 3 4), index: 1 4, length: 4)
// @debug cola-longest( (1 2 3 4) (1 (2 3)) (1 2 3) );
// @debug cola-longest( (1 2 3 4) (1 (2 3)) (1 2 3) (1 2 3 4) );

// (list: (1 2 3 4), index: 2, length: 2)
// (list: (1 (2 3)) (1 2), index: 2 4, length: 2)
// @debug cola-shortest( (1 2 3 4) (1 (2 3)) (1 2 3) );
// @debug cola-shortest( (1 2 3 4) (1 (2 3)) (1 2 3) (1 2) );
