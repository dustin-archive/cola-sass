@function cola-longest-shortest($type, $lists) {
  $results: null;

  @for $i from 1 through length($lists) {
    $list: nth($lists, $i);
    $length: length($list);

    @if $results == null
        or $type == 'longest' and $length > map-get($results, length)
        or $type == 'shortest' and $length < map-get($results, length) {
      $results: (index: $i, length: $length);
    }
    @else if $length == map-get($results, length) {
      $results: map-merge($results, (index: join(map-get($results, index), $i, comma)));
    }
  }

  @return $results;
}

@function cola-longest($lists) {
  @return cola-longest-shortest('longest', $lists);
}

@function cola-shortest($lists) {
  @return cola-longest-shortest('shortest', $lists);
}

// (index: 1, length: 4)
// (index: (1, 4), length: 4)
// @debug cola-longest( (1 2 3 4) (1 (2 3)) (1 2 3) );
// @debug cola-longest( (1 2 3 4) (1 (2 3)) (1 2 3) (1 2 3 4) );

// (index: 2, length: 2)
// (index: (2, 4), length: 2)
// @debug cola-shortest( (1 2 3 4) (1 (2 3)) (1 2 3) );
// @debug cola-shortest( (1 2 3 4) (1 (2 3)) (1 2 3) (1 2) );
