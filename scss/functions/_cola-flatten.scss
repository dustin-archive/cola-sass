@function cola-flatten($lists, $root: null) {
  $result: ();

  @each $item in $lists {
    @if type-of($item) == list and $root != 'root' {
      $result: join($result, cola-flatten($item));
    }
    @else {
      $result: join($result, $item);
    }
  }

  @return $result;
}

// 1 2 3
// 1 2 3 4 5 6
// 1 2 3 4 5 6 7 8 9
// 1 (2 3) 4 (5 6) 7 8 9
// @debug cola-flatten((1 (2 (3))));
// @debug cola-flatten((1 (2 (3))) (4 (5 (6))));
// @debug cola-flatten((1 (2 3)) (4 (5 6)) 7 8 9);
// @debug cola-flatten((1 (2 3)) (4 (5 6)) 7 8 9, 'root');

// 1
// number // make it this instead of list (cola-join vs join)
// @debug type-of(cola-flatten((1)));

// NEEDS TO WORK BETTER WTIH MAPS

// 1 1 2 2 3 3 4 5 5 6 6 // make it this instead
// 1 1 2 2 3 3 4 5 5 6 6 // make it this instead

// 1 1 2 2 3 3 4 (5 5) (6 6)
// 1 1, 2 2, 3 3, 4 (5: 5, 6: 6)
// @debug cola-flatten((1: 1, 2: 2, 3: 3, 4: (5: 5, 6: 6)));
// @debug cola-flatten((1: 1, 2: 2) (3: 3, 4: (5: 5, 6: 6)));

// 1 1 2 2 3 3 4 (5: 5, 6: 6) // make it this instead
// 1 1 2 2 3 3 4 (5: 5, 6: 6) // make it this instead

// 1 1 2 2 3 3 4 (5: 5, 6: 6)
// 1 1, 2 2, 3 3, 4 (5: 5, 6: 6)
// @debug cola-flatten((1: 1, 2: 2, 3: 3, 4: (5: 5, 6: 6)), 'root');
// @debug cola-flatten((1: 1, 2: 2) (3: 3, 4: (5: 5, 6: 6)), 'root');
